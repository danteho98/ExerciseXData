// <auto-generated />
using System;
using ExerciseXData_ExerciseLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseXData_ExerciseLibrary.Migrations
{
    [DbContext(typeof(ExerciseDbContext))]
    partial class ExerciseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", b =>
                {
                    b.Property<int>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("C_Id"));

                    b.Property<byte[]>("C_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("C_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("C_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("C_Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            C_Id = 1,
                            C_Modified_Date = new DateTime(2024, 12, 1, 7, 51, 53, 139, DateTimeKind.Local).AddTicks(1498),
                            C_Name = "Cardio"
                        },
                        new
                        {
                            C_Id = 2,
                            C_Modified_Date = new DateTime(2024, 12, 1, 7, 51, 53, 139, DateTimeKind.Local).AddTicks(1499),
                            C_Name = "Strength"
                        });
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.ExercisesModel", b =>
                {
                    b.Property<int>("E_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_Id"));

                    b.Property<int>("CategoriesC_Id")
                        .HasColumnType("int");

                    b.Property<string>("E_Cons_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Cons_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Cons_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("E_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("E_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("E_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("E_Id");

                    b.HasIndex("CategoriesC_Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            E_Id = 1,
                            CategoriesC_Id = 1,
                            E_Modified_Date = new DateTime(2024, 12, 1, 7, 51, 53, 139, DateTimeKind.Local).AddTicks(1627),
                            E_Name = "Running"
                        },
                        new
                        {
                            E_Id = 2,
                            CategoriesC_Id = 2,
                            E_Modified_Date = new DateTime(2024, 12, 1, 7, 51, 53, 139, DateTimeKind.Local).AddTicks(1629),
                            E_Name = "Push-ups"
                        });
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.ExercisesModel", b =>
                {
                    b.HasOne("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", "Categories")
                        .WithMany("Exercises")
                        .HasForeignKey("CategoriesC_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
