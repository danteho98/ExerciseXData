// <auto-generated />
using System;
using ExerciseXData_SharedLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseXData_SharedLibrary.Migrations
{
    [DbContext(typeof(SharedDbContext))]
    partial class SharedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.DietsFoodsModel", b =>
                {
                    b.Property<int>("DF_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DF_Id"));

                    b.Property<string>("DF_Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DF_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DF_Recommended_Servings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DF_Serving_Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DF_Total_Calories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DietsD_Id")
                        .HasColumnType("int");

                    b.Property<int?>("FoodsF_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("DF_Id");

                    b.HasIndex("DietsD_Id");

                    b.HasIndex("FoodsF_Id");

                    b.ToTable("DietsFoodsModel");
                });

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.DietsModel", b =>
                {
                    b.Property<int>("D_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("D_Id"));

                    b.Property<string>("D_Cons_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Cons_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Cons_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("D_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("D_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Pros_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Pros_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D_Pros_3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("D_Id");

                    b.ToTable("DietsModel");
                });

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.FoodsModel", b =>
                {
                    b.Property<int>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("F_Id"));

                    b.Property<int?>("F_Calories")
                        .HasColumnType("int");

                    b.Property<string>("F_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("F_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("F_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("F_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("F_Id");

                    b.ToTable("FoodsModel");
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", b =>
                {
                    b.Property<int>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("C_Id"));

                    b.Property<byte[]>("C_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("C_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("C_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("C_Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.ExercisesModel", b =>
                {
                    b.Property<int>("E_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("E_Id"));

                    b.Property<int>("CategoriesC_Id")
                        .HasColumnType("int");

                    b.Property<string>("E_Cons_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Cons_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Cons_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("E_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("E_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("E_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Pros_3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("E_Id");

                    b.HasIndex("CategoriesC_Id");

                    b.ToTable("ExercisesModel");
                });

            modelBuilder.Entity("ExerciseXData_SharedLibrary.Models.UsersDietsModel", b =>
                {
                    b.Property<string>("U_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("D_Id")
                        .HasColumnType("int");

                    b.Property<string>("Custom_Diet_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DietsD_Id")
                        .HasColumnType("int");

                    b.Property<string>("UD_Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UD_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UD_Serving_Size")
                        .HasColumnType("int");

                    b.Property<int?>("UD_Total_Calaroies")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("U_Id", "D_Id");

                    b.HasIndex("DietsD_Id");

                    b.HasIndex("UsersId");

                    b.ToTable("UsersDiets");
                });

            modelBuilder.Entity("ExerciseXData_SharedLibrary.Models.UsersExercisesModel", b =>
                {
                    b.Property<int>("UE_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UE_Id"));

                    b.Property<int>("Duration_sec")
                        .HasColumnType("int");

                    b.Property<int>("E_Id")
                        .HasColumnType("int");

                    b.Property<int>("ExercisesE_Id")
                        .HasColumnType("int");

                    b.Property<int>("Repetition")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<DateTime>("UE_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("U_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UE_Id");

                    b.HasIndex("ExercisesE_Id");

                    b.HasIndex("UsersId");

                    b.ToTable("UsersExercises");
                });

            modelBuilder.Entity("ExerciseXData_UserLibrary.Models.UsersModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("U_Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("U_Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("U_Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("U_Height_CM")
                        .HasColumnType("float");

                    b.Property<DateTime>("U_Last_Login")
                        .HasColumnType("datetime2");

                    b.Property<string>("U_Lifestyle_Condition_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Lifestyle_Condition_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Lifestyle_Condition_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Lifestyle_Condition_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Lifestyle_Condition_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("U_UserGender")
                        .HasColumnType("int");

                    b.Property<double>("U_Weight_KG")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersModel");
                });

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.DietsFoodsModel", b =>
                {
                    b.HasOne("ExerciseXData_DietLibrary.Models.DietsModel", "Diets")
                        .WithMany("DietsFoods")
                        .HasForeignKey("DietsD_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExerciseXData_DietLibrary.Models.FoodsModel", "Foods")
                        .WithMany("DietsFoods")
                        .HasForeignKey("FoodsF_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diets");

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.ExercisesModel", b =>
                {
                    b.HasOne("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", "Categories")
                        .WithMany("Exercises")
                        .HasForeignKey("CategoriesC_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ExerciseXData_SharedLibrary.Models.UsersDietsModel", b =>
                {
                    b.HasOne("ExerciseXData_DietLibrary.Models.DietsModel", "Diets")
                        .WithMany()
                        .HasForeignKey("DietsD_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExerciseXData_UserLibrary.Models.UsersModel", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Diets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExerciseXData_SharedLibrary.Models.UsersExercisesModel", b =>
                {
                    b.HasOne("ExerciseXData_ExerciseLibrary.Models.ExercisesModel", "Exercises")
                        .WithMany()
                        .HasForeignKey("ExercisesE_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExerciseXData_UserLibrary.Models.UsersModel", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Exercises");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.DietsModel", b =>
                {
                    b.Navigation("DietsFoods");
                });

            modelBuilder.Entity("ExerciseXData_DietLibrary.Models.FoodsModel", b =>
                {
                    b.Navigation("DietsFoods");
                });

            modelBuilder.Entity("ExerciseXData_ExerciseLibrary.Models.CategoriesModel", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
